	.file	"sample3.cpp"						.file	"sample3.cpp"
	.section	.ctors,"aw",@progbits				.section	.ctors,"aw",@progbits
	.align 4							.align 4
	.long	_GLOBAL__I__Z16depthFirstSearchPSt6vectorIiSa		.long	_GLOBAL__I__Z16depthFirstSearchPSt6vectorIiSa
	.text								.text
	.align 2							.align 2
.globl _Z16depthFirstSearchPSt6vectorIiSaIiEEPiii		.globl _Z16depthFirstSearchPSt6vectorIiSaIiEEPiii
	.type	_Z16depthFirstSearchPSt6vectorIiSaIiEEPiii, @		.type	_Z16depthFirstSearchPSt6vectorIiSaIiEEPiii, @
_Z16depthFirstSearchPSt6vectorIiSaIiEEPiii:			_Z16depthFirstSearchPSt6vectorIiSaIiEEPiii:
.LFB2524:							.LFB2524:
	pushl	%ebp							pushl	%ebp
.LCFI0:								.LCFI0:
	movl	%esp, %ebp						movl	%esp, %ebp
.LCFI1:								.LCFI1:
	pushl	%edi							pushl	%edi
.LCFI2:								.LCFI2:
	pushl	%esi							pushl	%esi
.LCFI3:								.LCFI3:
	pushl	%ebx							pushl	%ebx
.LCFI4:								.LCFI4:
	subl	$16, %esp						subl	$16, %esp
.LCFI5:								.LCFI5:
	movl	20(%ebp), %edi						movl	20(%ebp), %edi
	movl	16(%ebp), %eax						movl	16(%ebp), %eax
	movl	12(%ebp), %edx						movl	12(%ebp), %edx
	leal	(%edx,%eax,4), %ecx					leal	(%edx,%eax,4), %ecx
	movl	(%ecx), %edx						movl	(%ecx), %edx
	testl	%edx, %edx						testl	%edx, %edx
	je	.L2							je	.L2
	cmpl	%edi, %edx						cmpl	%edi, %edx
	sete	%al							sete	%al
	movzbl	%al, %eax						movzbl	%al, %eax
	jmp	.L4							jmp	.L4
.L2:								.L2:
	movl	%edi, (%ecx)						movl	%edi, (%ecx)
	leal	(%eax,%eax,2), %eax					leal	(%eax,%eax,2), %eax
	movl	8(%ebp), %edx						movl	8(%ebp), %edx
	leal	(%edx,%eax,4), %ebx					leal	(%edx,%eax,4), %ebx
	movl	(%ebx), %edx						movl	(%ebx), %edx
	movl	4(%ebx), %eax						movl	4(%ebx), %eax
	subl	%edx, %eax						subl	%edx, %eax
	sarl	$2, %eax						sarl	$2, %eax
	testl	%eax, %eax						testl	%eax, %eax
	je	.L5							je	.L5
	movl	$0, %esi						movl	$0, %esi
	movl	$0, %ecx						movl	$0, %ecx
.L7:								.L7:
	cmpl	$1, %edi						cmpl	$1, %edi
	sete	%al							sete	%al
	movzbl	%al, %eax						movzbl	%al, %eax
	addl	$1, %eax						addl	$1, %eax
	movl	%eax, 12(%esp)						movl	%eax, 12(%esp)
	movl	(%edx,%ecx,4), %eax					movl	(%edx,%ecx,4), %eax
	movl	%eax, 8(%esp)						movl	%eax, 8(%esp)
	movl	12(%ebp), %eax						movl	12(%ebp), %eax
	movl	%eax, 4(%esp)						movl	%eax, 4(%esp)
	movl	8(%ebp), %edx						movl	8(%ebp), %edx
	movl	%edx, (%esp)						movl	%edx, (%esp)
	call	_Z16depthFirstSearchPSt6vectorIiSaIiEEPiii		call	_Z16depthFirstSearchPSt6vectorIiSaIiEEPiii
	testb	%al, %al						testb	%al, %al
	jne	.L11							jne	.L11
	movl	$0, %eax						movl	$0, %eax
	jmp	.L4							jmp	.L4
.L11:								.L11:
	addl	$1, %esi						addl	$1, %esi
	movl	%esi, %ecx						movl	%esi, %ecx
	movl	(%ebx), %edx						movl	(%ebx), %edx
	movl	4(%ebx), %eax						movl	4(%ebx), %eax
	subl	%edx, %eax						subl	%edx, %eax
	sarl	$2, %eax						sarl	$2, %eax
	cmpl	%esi, %eax						cmpl	%esi, %eax
	ja	.L7							ja	.L7
.L5:								.L5:
	movl	$1, %eax						movl	$1, %eax
.L4:								.L4:
	addl	$16, %esp						addl	$16, %esp
	popl	%ebx							popl	%ebx
	popl	%esi							popl	%esi
	popl	%edi							popl	%edi
	popl	%ebp							popl	%ebp
	ret								ret
.LFE2524:							.LFE2524:
	.size	_Z16depthFirstSearchPSt6vectorIiSaIiEEPiii, .		.size	_Z16depthFirstSearchPSt6vectorIiSaIiEEPiii, .
.globl __gxx_personality_v0					.globl __gxx_personality_v0
	.align 2							.align 2
	.type	_Z41__static_initialization_and_destruction_0		.type	_Z41__static_initialization_and_destruction_0
_Z41__static_initialization_and_destruction_0ii:		_Z41__static_initialization_and_destruction_0ii:
.LFB2603:							.LFB2603:
	pushl	%ebp							pushl	%ebp
.LCFI6:								.LCFI6:
	movl	%esp, %ebp						movl	%esp, %ebp
.LCFI7:								.LCFI7:
	subl	$24, %esp						subl	$24, %esp
.LCFI8:								.LCFI8:
	cmpl	$1, %eax						cmpl	$1, %eax
	jne	.L19							jne	.L19
	cmpl	$65535, %edx						cmpl	$65535, %edx
	jne	.L19							jne	.L19
	movl	$_ZSt8__ioinit, (%esp)					movl	$_ZSt8__ioinit, (%esp)
	call	_ZNSt8ios_base4InitC1Ev					call	_ZNSt8ios_base4InitC1Ev
	movl	$__dso_handle, 8(%esp)					movl	$__dso_handle, 8(%esp)
	movl	$0, 4(%esp)						movl	$0, 4(%esp)
	movl	$__tcf_0, (%esp)					movl	$__tcf_0, (%esp)
	call	__cxa_atexit						call	__cxa_atexit
.L19:								.L19:
	leave								leave
	ret								ret
.LFE2603:							.LFE2603:
	.size	_Z41__static_initialization_and_destruction_0		.size	_Z41__static_initialization_and_destruction_0
	.align 2							.align 2
	.type	_GLOBAL__I__Z16depthFirstSearchPSt6vectorIiSa		.type	_GLOBAL__I__Z16depthFirstSearchPSt6vectorIiSa
_GLOBAL__I__Z16depthFirstSearchPSt6vectorIiSaIiEEPiii:		_GLOBAL__I__Z16depthFirstSearchPSt6vectorIiSaIiEEPiii:
.LFB2605:							.LFB2605:
	pushl	%ebp							pushl	%ebp
.LCFI9:								.LCFI9:
	movl	%esp, %ebp						movl	%esp, %ebp
.LCFI10:							.LCFI10:
	subl	$8, %esp						subl	$8, %esp
.LCFI11:							.LCFI11:
	movl	$65535, %edx						movl	$65535, %edx
	movl	$1, %eax						movl	$1, %eax
	call	_Z41__static_initialization_and_destruction_0		call	_Z41__static_initialization_and_destruction_0
	leave								leave
	ret								ret
.LFE2605:							.LFE2605:
	.size	_GLOBAL__I__Z16depthFirstSearchPSt6vectorIiSa		.size	_GLOBAL__I__Z16depthFirstSearchPSt6vectorIiSa
	.align 2							.align 2
	.type	__tcf_0, @function					.type	__tcf_0, @function
__tcf_0:							__tcf_0:
.LFB2604:							.LFB2604:
	pushl	%ebp							pushl	%ebp
.LCFI12:							.LCFI12:
	movl	%esp, %ebp						movl	%esp, %ebp
.LCFI13:							.LCFI13:
	subl	$8, %esp						subl	$8, %esp
.LCFI14:							.LCFI14:
	movl	$_ZSt8__ioinit, (%esp)					movl	$_ZSt8__ioinit, (%esp)
	call	_ZNSt8ios_base4InitD1Ev					call	_ZNSt8ios_base4InitD1Ev
	leave								leave
	ret								ret
.LFE2604:							.LFE2604:
	.size	__tcf_0, .-__tcf_0					.size	__tcf_0, .-__tcf_0
	.section	.rodata.str1.1,"aMS",@progbits,1		.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:								.LC0:
	.string	"vector::_M_insert_aux"					.string	"vector::_M_insert_aux"
	.section	.text._ZNSt6vectorIiSaIiEE13_M_insert		.section	.text._ZNSt6vectorIiSaIiEE13_M_insert
	.align 2							.align 2
	.weak	_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_c		.weak	_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_c
	.type	_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_c		.type	_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_c
_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_ite	_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_cxx17__normal_ite
.LFB2573:							.LFB2573:
	pushl	%ebp							pushl	%ebp
.LCFI15:							.LCFI15:
	movl	%esp, %ebp						movl	%esp, %ebp
.LCFI16:							.LCFI16:
	subl	$40, %esp						subl	$40, %esp
.LCFI17:							.LCFI17:
	movl	%ebx, -12(%ebp)						movl	%ebx, -12(%ebp)
.LCFI18:							.LCFI18:
	movl	%esi, -8(%ebp)						movl	%esi, -8(%ebp)
.LCFI19:							.LCFI19:
	movl	%edi, -4(%ebp)						movl	%edi, -4(%ebp)
.LCFI20:							.LCFI20:
	movl	8(%ebp), %esi						movl	8(%ebp), %esi
	movl	12(%ebp), %edi						movl	12(%ebp), %edi
	movl	4(%esi), %edx						movl	4(%esi), %edx
	cmpl	8(%esi), %edx						cmpl	8(%esi), %edx
	je	.L25							je	.L25
	testl	%edx, %edx						testl	%edx, %edx
	je	.L27							je	.L27
	movl	-4(%edx), %eax						movl	-4(%edx), %eax
	movl	%eax, (%edx)						movl	%eax, (%edx)
.L27:								.L27:
	movl	4(%esi), %edx						movl	4(%esi), %edx
	leal	4(%edx), %eax						leal	4(%edx), %eax
	movl	%eax, 4(%esi)						movl	%eax, 4(%esi)
	movl	16(%ebp), %eax						movl	16(%ebp), %eax
	movl	(%eax), %ebx						movl	(%eax), %ebx
	leal	-4(%edx), %eax						leal	-4(%edx), %eax
	subl	%edi, %eax						subl	%edi, %eax
	andl	$-4, %eax						andl	$-4, %eax
	movl	%eax, 8(%esp)						movl	%eax, 8(%esp)
	movl	%edi, 4(%esp)						movl	%edi, 4(%esp)
	subl	%eax, %edx						subl	%eax, %edx
	movl	%edx, (%esp)						movl	%edx, (%esp)
	call	memmove							call	memmove
	movl	%ebx, (%edi)						movl	%ebx, (%edi)
	jmp	.L43							jmp	.L43
.L25:								.L25:
	movl	%edx, %eax						movl	%edx, %eax
	subl	(%esi), %eax						subl	(%esi), %eax
	sarl	$2, %eax						sarl	$2, %eax
	cmpl	$1073741823, %eax					cmpl	$1073741823, %eax
	jne	.L30							jne	.L30
	movl	$.LC0, (%esp)						movl	$.LC0, (%esp)
	call	_ZSt20__throw_length_errorPKc				call	_ZSt20__throw_length_errorPKc
.L30:								.L30:
	movl	$1, %edx						movl	$1, %edx
	testl	%eax, %eax						testl	%eax, %eax
	je	.L34							je	.L34
	leal	(%eax,%eax), %edx					leal	(%eax,%eax), %edx
.L34:								.L34:
	cmpl	%eax, %edx						cmpl	%eax, %edx
	jb	.L35							jb	.L35
	cmpl	$1073741823, %edx					cmpl	$1073741823, %edx
	jbe	.L37							jbe	.L37
	.p2align 4,,5							.p2align 4,,5
	call	_ZSt17__throw_bad_allocv				call	_ZSt17__throw_bad_allocv
.L35:								.L35:
	movl	$1073741823, %edx					movl	$1073741823, %edx
.L37:								.L37:
	sall	$2, %edx						sall	$2, %edx
	movl	%edx, -20(%ebp)						movl	%edx, -20(%ebp)
	movl	%edx, (%esp)						movl	%edx, (%esp)
	call	_Znwj							call	_Znwj
	movl	%eax, -24(%ebp)						movl	%eax, -24(%ebp)
	movl	(%esi), %eax						movl	(%esi), %eax
	movl	%edi, %ebx						movl	%edi, %ebx
	subl	%eax, %ebx						subl	%eax, %ebx
	andl	$-4, %ebx						andl	$-4, %ebx
	movl	%ebx, 8(%esp)						movl	%ebx, 8(%esp)
	movl	%eax, 4(%esp)						movl	%eax, 4(%esp)
	movl	-24(%ebp), %ecx						movl	-24(%ebp), %ecx
	movl	%ecx, (%esp)						movl	%ecx, (%esp)
	call	memmove							call	memmove
	movl	-24(%ebp), %edx						movl	-24(%ebp), %edx
	addl	%ebx, %edx						addl	%ebx, %edx
	je	.L39							je	.L39
	movl	16(%ebp), %ecx						movl	16(%ebp), %ecx
	movl	(%ecx), %eax						movl	(%ecx), %eax
	movl	%eax, (%edx)						movl	%eax, (%edx)
.L39:								.L39:
	addl	$4, %edx						addl	$4, %edx
	movl	%edx, -16(%ebp)						movl	%edx, -16(%ebp)
	movl	4(%esi), %ebx						movl	4(%esi), %ebx
	subl	%edi, %ebx						subl	%edi, %ebx
	andl	$-4, %ebx						andl	$-4, %ebx
	movl	%ebx, 8(%esp)						movl	%ebx, 8(%esp)
	movl	%edi, 4(%esp)						movl	%edi, 4(%esp)
	movl	%edx, (%esp)						movl	%edx, (%esp)
	call	memmove							call	memmove
	movl	(%esi), %eax						movl	(%esi), %eax
	testl	%eax, %eax						testl	%eax, %eax
	je	.L41							je	.L41
	movl	%eax, (%esp)						movl	%eax, (%esp)
	call	_ZdlPv							call	_ZdlPv
.L41:								.L41:
	movl	-24(%ebp), %ecx						movl	-24(%ebp), %ecx
	movl	%ecx, (%esi)						movl	%ecx, (%esi)
	movl	-16(%ebp), %eax						movl	-16(%ebp), %eax
	addl	%ebx, %eax						addl	%ebx, %eax
	movl	%eax, 4(%esi)						movl	%eax, 4(%esi)
	movl	%ecx, %eax						movl	%ecx, %eax
	addl	-20(%ebp), %eax						addl	-20(%ebp), %eax
	movl	%eax, 8(%esi)						movl	%eax, 8(%esi)
.L43:								.L43:
	movl	-12(%ebp), %ebx						movl	-12(%ebp), %ebx
	movl	-8(%ebp), %esi						movl	-8(%ebp), %esi
	movl	-4(%ebp), %edi						movl	-4(%ebp), %edi
	movl	%ebp, %esp						movl	%ebp, %esp
	popl	%ebp							popl	%ebp
	ret								ret
.LFE2573:							.LFE2573:
	.size	_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_c		.size	_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_c
	.section	.rodata.str1.1					.section	.rodata.str1.1
.LC1:								.LC1:
	.string	"%d"							.string	"%d"
.LC2:								.LC2:
	.string	"%d%d"							.string	"%d%d"
.LC3:								.LC3:
	.string	""							.string	""
.LC4:								.LC4:
	.string	"NOT "							.string	"NOT "
.LC5:								.LC5:
	.string	"BICOLORABLE."						.string	"BICOLORABLE."
.globl _Unwind_Resume						.globl _Unwind_Resume
	.text								.text
	.align 2							.align 2
.globl main							.globl main
	.type	main, @function						.type	main, @function
main:								main:
.LFB2525:							.LFB2525:
	leal	4(%esp), %ecx						leal	4(%esp), %ecx
.LCFI21:							.LCFI21:
	andl	$-16, %esp						andl	$-16, %esp
	pushl	-4(%ecx)						pushl	-4(%ecx)
.LCFI22:							.LCFI22:
	pushl	%ebp							pushl	%ebp
.LCFI23:							.LCFI23:
	movl	%esp, %ebp						movl	%esp, %ebp
.LCFI24:							.LCFI24:
	pushl	%edi							pushl	%edi
.LCFI25:							.LCFI25:
	pushl	%esi							pushl	%esi
.LCFI26:							.LCFI26:
	pushl	%ebx							pushl	%ebx
.LCFI27:							.LCFI27:
	pushl	%ecx							pushl	%ecx
.LCFI28:							.LCFI28:
	subl	$72, %esp						subl	$72, %esp
.LCFI29:							.LCFI29:
	movl	%gs:20, %eax						movl	%gs:20, %eax
	movl	%eax, -20(%ebp)						movl	%eax, -20(%ebp)
	xorl	%eax, %eax						xorl	%eax, %eax
	jmp	.L45							jmp	.L45
.L47:								.L47:
	movl	$0, (%eax)						movl	$0, (%eax)
	movl	$0, 4(%eax)						movl	$0, 4(%eax)
	movl	$0, 8(%eax)						movl	$0, 8(%eax)
	addl	$12, %eax						addl	$12, %eax
	addl	$1, %edx						addl	$1, %edx
	cmpl	%ecx, %edx						cmpl	%ecx, %edx
	jne	.L47							jne	.L47
.L48:								.L48:
	movl	-24(%ebp), %edx						movl	-24(%ebp), %edx
	sall	$2, %edx						sall	$2, %edx
	leal	30(%edx), %eax						leal	30(%edx), %eax
	andl	$-16, %eax						andl	$-16, %eax
	subl	%eax, %esp						subl	%eax, %esp
	leal	31(%esp), %eax						leal	31(%esp), %eax
	andl	$-16, %eax						andl	$-16, %eax
	movl	%eax, -60(%ebp)						movl	%eax, -60(%ebp)
	movl	%edx, 8(%esp)						movl	%edx, 8(%esp)
	movl	$0, 4(%esp)						movl	$0, 4(%esp)
	movl	%eax, (%esp)						movl	%eax, (%esp)
	call	memset							call	memset
	leal	-28(%ebp), %edx						leal	-28(%ebp), %edx
	movl	%edx, 4(%esp)						movl	%edx, 4(%esp)
	movl	$.LC1, (%esp)						movl	$.LC1, (%esp)
.LEHB0:								.LEHB0:
	call	scanf							call	scanf
	cmpl	$0, -28(%ebp)						cmpl	$0, -28(%ebp)
	je	.L50							je	.L50
	leal	-36(%ebp), %edi						leal	-36(%ebp), %edi
	leal	-32(%ebp), %esi						leal	-32(%ebp), %esi
.L85:								.L85:
	movl	%edi, 8(%esp)						movl	%edi, 8(%esp)
	movl	%esi, 4(%esp)						movl	%esi, 4(%esp)
	movl	$.LC2, (%esp)						movl	$.LC2, (%esp)
	call	scanf							call	scanf
	movl	-32(%ebp), %ecx						movl	-32(%ebp), %ecx
	leal	(%ecx,%ecx,2), %eax					leal	(%ecx,%ecx,2), %eax
	leal	(%ebx,%eax,4), %eax					leal	(%ebx,%eax,4), %eax
	movl	4(%eax), %edx						movl	4(%eax), %edx
	cmpl	8(%eax), %edx						cmpl	8(%eax), %edx
	je	.L52							je	.L52
	testl	%edx, %edx						testl	%edx, %edx
	je	.L54							je	.L54
	movl	-36(%ebp), %eax						movl	-36(%ebp), %eax
	movl	%eax, (%edx)						movl	%eax, (%edx)
.L54:								.L54:
	leal	(%ecx,%ecx,2), %eax					leal	(%ecx,%ecx,2), %eax
	addl	$4, 4(%ebx,%eax,4)					addl	$4, 4(%ebx,%eax,4)
	jmp	.L56							jmp	.L56
.L52:								.L52:
	movl	%edi, 8(%esp)						movl	%edi, 8(%esp)
	movl	%edx, 4(%esp)						movl	%edx, 4(%esp)
	leal	(%ecx,%ecx,2), %eax					leal	(%ecx,%ecx,2), %eax
	leal	(%ebx,%eax,4), %eax					leal	(%ebx,%eax,4), %eax
	movl	%eax, (%esp)						movl	%eax, (%esp)
	call	_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_c		call	_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_c
.L56:								.L56:
	movl	-36(%ebp), %ecx						movl	-36(%ebp), %ecx
	leal	(%ecx,%ecx,2), %eax					leal	(%ecx,%ecx,2), %eax
	leal	(%ebx,%eax,4), %eax					leal	(%ebx,%eax,4), %eax
	movl	4(%eax), %edx						movl	4(%eax), %edx
	cmpl	8(%eax), %edx						cmpl	8(%eax), %edx
	je	.L57							je	.L57
	testl	%edx, %edx						testl	%edx, %edx
	je	.L59							je	.L59
	movl	-32(%ebp), %eax						movl	-32(%ebp), %eax
	movl	%eax, (%edx)						movl	%eax, (%edx)
.L59:								.L59:
	leal	(%ecx,%ecx,2), %eax					leal	(%ecx,%ecx,2), %eax
	addl	$4, 4(%ebx,%eax,4)					addl	$4, 4(%ebx,%eax,4)
	jmp	.L61							jmp	.L61
.L57:								.L57:
	movl	%esi, 8(%esp)						movl	%esi, 8(%esp)
	movl	%edx, 4(%esp)						movl	%edx, 4(%esp)
	leal	(%ecx,%ecx,2), %eax					leal	(%ecx,%ecx,2), %eax
	leal	(%ebx,%eax,4), %eax					leal	(%ebx,%eax,4), %eax
	movl	%eax, (%esp)						movl	%eax, (%esp)
	call	_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_c		call	_ZNSt6vectorIiSaIiEE13_M_insert_auxEN9__gnu_c
.L61:								.L61:
	movl	-28(%ebp), %eax						movl	-28(%ebp), %eax
	subl	$1, %eax						subl	$1, %eax
	movl	%eax, -28(%ebp)						movl	%eax, -28(%ebp)
	testl	%eax, %eax						testl	%eax, %eax
	jne	.L85							jne	.L85
.L50:								.L50:
	movl	$1, 12(%esp)						movl	$1, 12(%esp)
	movl	$0, 8(%esp)						movl	$0, 8(%esp)
	movl	-60(%ebp), %eax						movl	-60(%ebp), %eax
	movl	%eax, 4(%esp)						movl	%eax, 4(%esp)
	movl	-52(%ebp), %edx						movl	-52(%ebp), %edx
	movl	%edx, (%esp)						movl	%edx, (%esp)
	call	_Z16depthFirstSearchPSt6vectorIiSaIiEEPiii		call	_Z16depthFirstSearchPSt6vectorIiSaIiEEPiii
	movl	$.LC3, %edx						movl	$.LC3, %edx
	testb	%al, %al						testb	%al, %al
	jne	.L64							jne	.L64
	movl	$.LC4, %edx						movl	$.LC4, %edx
.L64:								.L64:
	movl	%edx, (%esp)						movl	%edx, (%esp)
	call	printf							call	printf
	movl	$.LC5, (%esp)						movl	$.LC5, (%esp)
	call	puts							call	puts
.LEHE0:								.LEHE0:
	jmp	.L88							jmp	.L88
.L81:								.L81:
.L66:								.L66:
	movl	%eax, %esi						movl	%eax, %esi
	addl	-64(%ebp), %ebx						addl	-64(%ebp), %ebx
.L93:								.L93:
	cmpl	-52(%ebp), %ebx						cmpl	-52(%ebp), %ebx
	je	.L68							je	.L68
	subl	$12, %ebx						subl	$12, %ebx
	movl	(%ebx), %eax						movl	(%ebx), %eax
	testl	%eax, %eax						testl	%eax, %eax
	je	.L93							je	.L93
	movl	%eax, (%esp)						movl	%eax, (%esp)
	call	_ZdlPv							call	_ZdlPv
	jmp	.L93							jmp	.L93
.L68:								.L68:
.L75:								.L75:
	movl	-56(%ebp), %esp						movl	-56(%ebp), %esp
	movl	%esi, (%esp)						movl	%esi, (%esp)
.LEHB1:								.LEHB1:
	call	_Unwind_Resume						call	_Unwind_Resume
.L88:								.L88:
	addl	-64(%ebp), %ebx						addl	-64(%ebp), %ebx
.L94:								.L94:
	cmpl	-52(%ebp), %ebx						cmpl	-52(%ebp), %ebx
	je	.L72							je	.L72
	subl	$12, %ebx						subl	$12, %ebx
	movl	(%ebx), %eax						movl	(%ebx), %eax
	testl	%eax, %eax						testl	%eax, %eax
	je	.L94							je	.L94
	movl	%eax, (%esp)						movl	%eax, (%esp)
	call	_ZdlPv							call	_ZdlPv
	jmp	.L94							jmp	.L94
.L82:								.L82:
.L72:								.L72:
	movl	-56(%ebp), %esp						movl	-56(%ebp), %esp
.L45:								.L45:
	leal	-24(%ebp), %eax						leal	-24(%ebp), %eax
	movl	%eax, 4(%esp)						movl	%eax, 4(%esp)
	movl	$.LC1, (%esp)						movl	$.LC1, (%esp)
	call	scanf							call	scanf
.LEHE1:								.LEHE1:
	testl	%eax, %eax						testl	%eax, %eax
	je	.L76							je	.L76
	cmpl	$0, -24(%ebp)						cmpl	$0, -24(%ebp)
	je	.L76							je	.L76
	movl	%esp, -56(%ebp)						movl	%esp, -56(%ebp)
	movl	-24(%ebp), %ecx						movl	-24(%ebp), %ecx
	leal	(%ecx,%ecx,2), %eax					leal	(%ecx,%ecx,2), %eax
	sall	$2, %eax						sall	$2, %eax
	movl	%eax, -64(%ebp)						movl	%eax, -64(%ebp)
	addl	$30, %eax						addl	$30, %eax
	andl	$-16, %eax						andl	$-16, %eax
	subl	%eax, %esp						subl	%eax, %esp
	leal	31(%esp), %ebx						leal	31(%esp), %ebx
	andl	$-16, %ebx						andl	$-16, %ebx
	movl	%ebx, -52(%ebp)						movl	%ebx, -52(%ebp)
	movl	%ebx, %eax						movl	%ebx, %eax
	movl	$0, %edx						movl	$0, %edx
	testl	%ecx, %ecx						testl	%ecx, %ecx
	jne	.L47							jne	.L47
	jmp	.L48							jmp	.L48
.L76:								.L76:
	movl	$0, %eax						movl	$0, %eax
	movl	-20(%ebp), %edx						movl	-20(%ebp), %edx
	xorl	%gs:20, %edx						xorl	%gs:20, %edx
	je	.L80							je	.L80
	.p2align 4,,7							.p2align 4,,7
	call	__stack_chk_fail					call	__stack_chk_fail
.L80:								.L80:
	leal	-16(%ebp), %esp						leal	-16(%ebp), %esp
	popl	%ecx							popl	%ecx
	popl	%ebx							popl	%ebx
	popl	%esi							popl	%esi
	popl	%edi							popl	%edi
	popl	%ebp							popl	%ebp
	leal	-4(%ecx), %esp						leal	-4(%ecx), %esp
	ret								ret
.LFE2525:							.LFE2525:
	.size	main, .-main						.size	main, .-main
	.section	.gcc_except_table,"a",@progbits			.section	.gcc_except_table,"a",@progbits
.LLSDA2525:							.LLSDA2525:
	.byte	0xff							.byte	0xff
	.byte	0xff							.byte	0xff
	.byte	0x1							.byte	0x1
	.uleb128 .LLSDACSE2525-.LLSDACSB2525				.uleb128 .LLSDACSE2525-.LLSDACSB2525
.LLSDACSB2525:							.LLSDACSB2525:
	.uleb128 .LEHB0-.LFB2525					.uleb128 .LEHB0-.LFB2525
	.uleb128 .LEHE0-.LEHB0						.uleb128 .LEHE0-.LEHB0
	.uleb128 .L81-.LFB2525						.uleb128 .L81-.LFB2525
	.uleb128 0x0							.uleb128 0x0
	.uleb128 .LEHB1-.LFB2525					.uleb128 .LEHB1-.LFB2525
	.uleb128 .LEHE1-.LEHB1						.uleb128 .LEHE1-.LEHB1
	.uleb128 0x0							.uleb128 0x0
	.uleb128 0x0							.uleb128 0x0
.LLSDACSE2525:							.LLSDACSE2525:
	.text								.text
	.local	_ZSt8__ioinit						.local	_ZSt8__ioinit
	.comm	_ZSt8__ioinit,1,1					.comm	_ZSt8__ioinit,1,1
	.weakref	_Z20__gthrw_pthread_oncePiPFvvE,pthre		.weakref	_Z20__gthrw_pthread_oncePiPFvvE,pthre
	.weakref	_Z27__gthrw_pthread_getspecificj,pthr		.weakref	_Z27__gthrw_pthread_getspecificj,pthr
	.weakref	_Z27__gthrw_pthread_setspecificjPKv,p		.weakref	_Z27__gthrw_pthread_setspecificjPKv,p
	.weakref	_Z22__gthrw_pthread_createPmPK14pthre		.weakref	_Z22__gthrw_pthread_createPmPK14pthre
	.weakref	_Z22__gthrw_pthread_cancelm,pthread_c		.weakref	_Z22__gthrw_pthread_cancelm,pthread_c
	.weakref	_Z26__gthrw_pthread_mutex_lockP15pthr		.weakref	_Z26__gthrw_pthread_mutex_lockP15pthr
	.weakref	_Z29__gthrw_pthread_mutex_trylockP15p		.weakref	_Z29__gthrw_pthread_mutex_trylockP15p
	.weakref	_Z28__gthrw_pthread_mutex_unlockP15pt		.weakref	_Z28__gthrw_pthread_mutex_unlockP15pt
	.weakref	_Z26__gthrw_pthread_mutex_initP15pthr		.weakref	_Z26__gthrw_pthread_mutex_initP15pthr
	.weakref	_Z26__gthrw_pthread_key_createPjPFvPv		.weakref	_Z26__gthrw_pthread_key_createPjPFvPv
	.weakref	_Z26__gthrw_pthread_key_deletej,pthre		.weakref	_Z26__gthrw_pthread_key_deletej,pthre
	.weakref	_Z30__gthrw_pthread_mutexattr_initP19		.weakref	_Z30__gthrw_pthread_mutexattr_initP19
	.weakref	_Z33__gthrw_pthread_mutexattr_settype		.weakref	_Z33__gthrw_pthread_mutexattr_settype
	.weakref	_Z33__gthrw_pthread_mutexattr_destroy		.weakref	_Z33__gthrw_pthread_mutexattr_destroy
	.section	.eh_frame,"a",@progbits				.section	.eh_frame,"a",@progbits
.Lframe1:							.Lframe1:
	.long	.LECIE1-.LSCIE1						.long	.LECIE1-.LSCIE1
.LSCIE1:							.LSCIE1:
	.long	0x0							.long	0x0
	.byte	0x1							.byte	0x1
	.string	"zPL"							.string	"zPL"
	.uleb128 0x1							.uleb128 0x1
	.sleb128 -4							.sleb128 -4
	.byte	0x8							.byte	0x8
	.uleb128 0x6							.uleb128 0x6
	.byte	0x0							.byte	0x0
	.long	__gxx_personality_v0					.long	__gxx_personality_v0
	.byte	0x0							.byte	0x0
	.byte	0xc							.byte	0xc
	.uleb128 0x4							.uleb128 0x4
	.uleb128 0x4							.uleb128 0x4
	.byte	0x88							.byte	0x88
	.uleb128 0x1							.uleb128 0x1
	.align 4							.align 4
.LECIE1:							.LECIE1:
.LSFDE1:							.LSFDE1:
	.long	.LEFDE1-.LASFDE1					.long	.LEFDE1-.LASFDE1
.LASFDE1:							.LASFDE1:
	.long	.LASFDE1-.Lframe1					.long	.LASFDE1-.Lframe1
	.long	.LFB2524						.long	.LFB2524
	.long	.LFE2524-.LFB2524					.long	.LFE2524-.LFB2524
	.uleb128 0x4							.uleb128 0x4
	.long	0x0							.long	0x0
	.byte	0x4							.byte	0x4
	.long	.LCFI0-.LFB2524						.long	.LCFI0-.LFB2524
	.byte	0xe							.byte	0xe
	.uleb128 0x8							.uleb128 0x8
	.byte	0x85							.byte	0x85
	.uleb128 0x2							.uleb128 0x2
	.byte	0x4							.byte	0x4
	.long	.LCFI1-.LCFI0						.long	.LCFI1-.LCFI0
	.byte	0xd							.byte	0xd
	.uleb128 0x5							.uleb128 0x5
	.byte	0x4							.byte	0x4
	.long	.LCFI5-.LCFI1						.long	.LCFI5-.LCFI1
	.byte	0x83							.byte	0x83
	.uleb128 0x5							.uleb128 0x5
	.byte	0x86							.byte	0x86
	.uleb128 0x4							.uleb128 0x4
	.byte	0x87							.byte	0x87
	.uleb128 0x3							.uleb128 0x3
	.align 4							.align 4
.LEFDE1:							.LEFDE1:
.LSFDE3:							.LSFDE3:
	.long	.LEFDE3-.LASFDE3					.long	.LEFDE3-.LASFDE3
.LASFDE3:							.LASFDE3:
	.long	.LASFDE3-.Lframe1					.long	.LASFDE3-.Lframe1
	.long	.LFB2603						.long	.LFB2603
	.long	.LFE2603-.LFB2603					.long	.LFE2603-.LFB2603
	.uleb128 0x4							.uleb128 0x4
	.long	0x0							.long	0x0
	.byte	0x4							.byte	0x4
	.long	.LCFI6-.LFB2603						.long	.LCFI6-.LFB2603
	.byte	0xe							.byte	0xe
	.uleb128 0x8							.uleb128 0x8
	.byte	0x85							.byte	0x85
	.uleb128 0x2							.uleb128 0x2
	.byte	0x4							.byte	0x4
	.long	.LCFI7-.LCFI6						.long	.LCFI7-.LCFI6
	.byte	0xd							.byte	0xd
	.uleb128 0x5							.uleb128 0x5
	.align 4							.align 4
.LEFDE3:							.LEFDE3:
.LSFDE5:							.LSFDE5:
	.long	.LEFDE5-.LASFDE5					.long	.LEFDE5-.LASFDE5
.LASFDE5:							.LASFDE5:
	.long	.LASFDE5-.Lframe1					.long	.LASFDE5-.Lframe1
	.long	.LFB2605						.long	.LFB2605
	.long	.LFE2605-.LFB2605					.long	.LFE2605-.LFB2605
	.uleb128 0x4							.uleb128 0x4
	.long	0x0							.long	0x0
	.byte	0x4							.byte	0x4
	.long	.LCFI9-.LFB2605						.long	.LCFI9-.LFB2605
	.byte	0xe							.byte	0xe
	.uleb128 0x8							.uleb128 0x8
	.byte	0x85							.byte	0x85
	.uleb128 0x2							.uleb128 0x2
	.byte	0x4							.byte	0x4
	.long	.LCFI10-.LCFI9						.long	.LCFI10-.LCFI9
	.byte	0xd							.byte	0xd
	.uleb128 0x5							.uleb128 0x5
	.align 4							.align 4
.LEFDE5:							.LEFDE5:
.LSFDE7:							.LSFDE7:
	.long	.LEFDE7-.LASFDE7					.long	.LEFDE7-.LASFDE7
.LASFDE7:							.LASFDE7:
	.long	.LASFDE7-.Lframe1					.long	.LASFDE7-.Lframe1
	.long	.LFB2604						.long	.LFB2604
	.long	.LFE2604-.LFB2604					.long	.LFE2604-.LFB2604
	.uleb128 0x4							.uleb128 0x4
	.long	0x0							.long	0x0
	.byte	0x4							.byte	0x4
	.long	.LCFI12-.LFB2604					.long	.LCFI12-.LFB2604
	.byte	0xe							.byte	0xe
	.uleb128 0x8							.uleb128 0x8
	.byte	0x85							.byte	0x85
	.uleb128 0x2							.uleb128 0x2
	.byte	0x4							.byte	0x4
	.long	.LCFI13-.LCFI12						.long	.LCFI13-.LCFI12
	.byte	0xd							.byte	0xd
	.uleb128 0x5							.uleb128 0x5
	.align 4							.align 4
.LEFDE7:							.LEFDE7:
.LSFDE9:							.LSFDE9:
	.long	.LEFDE9-.LASFDE9					.long	.LEFDE9-.LASFDE9
.LASFDE9:							.LASFDE9:
	.long	.LASFDE9-.Lframe1					.long	.LASFDE9-.Lframe1
	.long	.LFB2573						.long	.LFB2573
	.long	.LFE2573-.LFB2573					.long	.LFE2573-.LFB2573
	.uleb128 0x4							.uleb128 0x4
	.long	0x0							.long	0x0
	.byte	0x4							.byte	0x4
	.long	.LCFI15-.LFB2573					.long	.LCFI15-.LFB2573
	.byte	0xe							.byte	0xe
	.uleb128 0x8							.uleb128 0x8
	.byte	0x85							.byte	0x85
	.uleb128 0x2							.uleb128 0x2
	.byte	0x4							.byte	0x4
	.long	.LCFI16-.LCFI15						.long	.LCFI16-.LCFI15
	.byte	0xd							.byte	0xd
	.uleb128 0x5							.uleb128 0x5
	.byte	0x4							.byte	0x4
	.long	.LCFI20-.LCFI16						.long	.LCFI20-.LCFI16
	.byte	0x87							.byte	0x87
	.uleb128 0x3							.uleb128 0x3
	.byte	0x86							.byte	0x86
	.uleb128 0x4							.uleb128 0x4
	.byte	0x83							.byte	0x83
	.uleb128 0x5							.uleb128 0x5
	.align 4							.align 4
.LEFDE9:							.LEFDE9:
.LSFDE11:							.LSFDE11:
	.long	.LEFDE11-.LASFDE11					.long	.LEFDE11-.LASFDE11
.LASFDE11:							.LASFDE11:
	.long	.LASFDE11-.Lframe1					.long	.LASFDE11-.Lframe1
	.long	.LFB2525						.long	.LFB2525
	.long	.LFE2525-.LFB2525					.long	.LFE2525-.LFB2525
	.uleb128 0x4							.uleb128 0x4
	.long	.LLSDA2525						.long	.LLSDA2525
	.byte	0x4							.byte	0x4
	.long	.LCFI21-.LFB2525					.long	.LCFI21-.LFB2525
	.byte	0xc							.byte	0xc
	.uleb128 0x1							.uleb128 0x1
	.uleb128 0x0							.uleb128 0x0
	.byte	0x9							.byte	0x9
	.uleb128 0x4							.uleb128 0x4
	.uleb128 0x1							.uleb128 0x1
	.byte	0x4							.byte	0x4
	.long	.LCFI22-.LCFI21						.long	.LCFI22-.LCFI21
	.byte	0xc							.byte	0xc
	.uleb128 0x4							.uleb128 0x4
	.uleb128 0x4							.uleb128 0x4
	.byte	0x4							.byte	0x4
	.long	.LCFI23-.LCFI22						.long	.LCFI23-.LCFI22
	.byte	0xe							.byte	0xe
	.uleb128 0x8							.uleb128 0x8
	.byte	0x85							.byte	0x85
	.uleb128 0x2							.uleb128 0x2
	.byte	0x4							.byte	0x4
	.long	.LCFI24-.LCFI23						.long	.LCFI24-.LCFI23
	.byte	0xd							.byte	0xd
	.uleb128 0x5							.uleb128 0x5
	.byte	0x4							.byte	0x4
	.long	.LCFI28-.LCFI24						.long	.LCFI28-.LCFI24
	.byte	0x84							.byte	0x84
	.uleb128 0x6							.uleb128 0x6
	.byte	0x83							.byte	0x83
	.uleb128 0x5							.uleb128 0x5
	.byte	0x86							.byte	0x86
	.uleb128 0x4							.uleb128 0x4
	.byte	0x87							.byte	0x87
	.uleb128 0x3							.uleb128 0x3
	.align 4							.align 4
.LEFDE11:							.LEFDE11:
	.ident	"GCC: (GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu3)"		.ident	"GCC: (GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu3)"
	.section	.note.GNU-stack,"",@progbits			.section	.note.GNU-stack,"",@progbits
